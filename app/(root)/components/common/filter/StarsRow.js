const StarsRow = ({ nu, order }) => {
  const goldStars = Array.from(
    { length: parseFloat(nu) },
    (_, index) => index + 1,
  );
  const whiteStars = Array.from(
    { length: parseFloat(5 - nu) },
    (_, index) => index + 1,
  );
  return (
    <div className="flex items-center gap-1 py-0.5">
      {goldStars.map((star,i) => (
        <svg
          key={i + "sg"}
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          className="gold"
          >
          <path
            d="M8.42944 3.36661C9.04097 2.07832 10.8079 2.07832 11.4194 3.36661L12.4763 5.59311C12.7191 6.1047 13.1885 6.45928 13.7315 6.54132L16.0948 6.89836C17.4622 7.10494 18.0082 8.8521 17.0187 9.85489L15.3087 11.588C14.9157 11.9862 14.7364 12.5599 14.8292 13.1222L15.2329 15.5694C15.4665 16.9853 14.037 18.0652 12.814 17.3966L10.7002 16.2412C10.2145 15.9758 9.63431 15.9758 9.14863 16.2412L7.03488 17.3966C5.81182 18.0652 4.38236 16.9854 4.61594 15.5694L5.01964 13.1222C5.11239 12.5599 4.93309 11.9862 4.54017 11.588L2.83011 9.85489C1.84063 8.8521 2.38664 7.10494 3.75405 6.89836L6.11731 6.54132C6.66031 6.45928 7.12972 6.1047 7.37256 5.59311L8.42944 3.36661Z"
            fill="#F39406" stroke="#F39406"
            />
        </svg>
        // <svg width="20" height="20" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg" key={i + "sg"}>
        // <path d="M6.87023 2.20841C7.48176 0.920115 9.24867 0.920113 9.8602 2.20841L10.9171 4.43491C11.1599 4.94649 11.6293 5.30108 12.1723 5.38312L14.5356 5.74015C15.903 5.94674 16.449 7.69389 15.4595 8.69669L13.7495 10.4298C13.3565 10.828 13.1772 11.4017 13.27 11.964L13.6737 14.4112C13.9073 15.8271 12.4778 16.9069 11.2548 16.2384L9.141 15.083C8.65532 14.8175 8.0751 14.8175 7.58943 15.083L5.47567 16.2384C4.25261 16.9069 2.82316 15.8271 3.05674 14.4112L3.46043 11.964C3.55319 11.4017 3.37389 10.828 2.98097 10.4298L1.2709 8.69669C0.281429 7.69389 0.827431 5.94674 2.19485 5.74015L4.5581 5.38312C5.10111 5.30108 5.57052 4.94649 5.81335 4.43491L6.87023 2.20841Z" fill="#F39406" stroke="#F39406" stroke-linejoin="round"/>
        // </svg>
      ))}
      {whiteStars.map((star,i) => (
        // <svg width="20" height="20" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg" key={i + "sw"}>
        // <path d="M6.87023 2.20841C7.48176 0.920115 9.24867 0.920113 9.8602 2.20841L10.9171 4.43491C11.1599 4.94649 11.6293 5.30108 12.1723 5.38312L14.5356 5.74015C15.903 5.94674 16.449 7.69389 15.4595 8.69669L13.7495 10.4298C13.3565 10.828 13.1772 11.4017 13.27 11.964L13.6737 14.4112C13.9073 15.8271 12.4778 16.9069 11.2548 16.2384L9.141 15.083C8.65532 14.8175 8.0751 14.8175 7.58943 15.083L5.47567 16.2384C4.25261 16.9069 2.82316 15.8271 3.05674 14.4112L3.46043 11.964C3.55319 11.4017 3.37389 10.828 2.98097 10.4298L1.2709 8.69669C0.281429 7.69389 0.827431 5.94674 2.19485 5.74015L4.5581 5.38312C5.10111 5.30108 5.57052 4.94649 5.81335 4.43491L6.87023 2.20841Z" fill="white" stroke="#F39406" stroke-linejoin="round"/>
        // </svg>
        <svg
          key={i + "sw"}
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          className="white"
          >
          <path
            d="M8.42944 3.36661C9.04097 2.07832 10.8079 2.07832 11.4194 3.36661L12.4763 5.59311C12.7191 6.1047 13.1885 6.45928 13.7315 6.54132L16.0948 6.89836C17.4622 7.10494 18.0082 8.8521 17.0187 9.85489L15.3087 11.588C14.9157 11.9862 14.7364 12.5599 14.8292 13.1222L15.2329 15.5694C15.4665 16.9853 14.037 18.0652 12.814 17.3966L10.7002 16.2412C10.2145 15.9758 9.63431 15.9758 9.14863 16.2412L7.03488 17.3966C5.81182 18.0652 4.38236 16.9854 4.61594 15.5694L5.01964 13.1222C5.11239 12.5599 4.93309 11.9862 4.54017 11.588L2.83011 9.85489C1.84063 8.8521 2.38664 7.10494 3.75405 6.89836L6.11731 6.54132C6.66031 6.45928 7.12972 6.1047 7.37256 5.59311L8.42944 3.36661Z"
            fill="white" stroke="#F39406"
            />
        </svg>
      ))}
    </div>
  );
};
export default StarsRow;
